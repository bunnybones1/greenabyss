var THREE = require('three');
var defaults = require('lodash.defaults');

var TestSphere = require('meshes/TestSphere');
var Sky = require('gameObjects/Sky');
var onVR = require('utils/devices/onVR');
var FirstPersonCamera = require('cameras/FirstPerson');
var FireLight = require('lights/Fire');
var ThirdPersonCamera = require('cameras/ThirdPerson');

var addTestGeometry = require('tests/addTestGeometry');
var CarvableTetrahedron = require('gameObjects/CarvableTetrahedron');

var DynamicTextureManager = require('textures/DynamicTextureManager');

var __defaultParams = {
};

function GameWorld(params) {
	params = defaults(params, __defaultParams);
	if(!params.scene) throw new Error('Missing a threejs scene.');
	var scene = params.scene;
	var renderer = params.renderer;

	this.dynamicTextureManager = new DynamicTextureManager({
		renderer: renderer
	});

	var material = new THREE.MeshStandardMaterial({
		map: this.dynamicTextureManager.maps.map.texture,
		normalMap: this.dynamicTextureManager.maps.normalMap.texture,
		emissive: 0xffffff,
		emissiveMap: this.dynamicTextureManager.maps.emissiveMap.texture,
		subSurfaceAbsorbColorMap: this.dynamicTextureManager.maps.subSurfaceAbsorbColorMap.texture,
		metalnessMap: this.dynamicTextureManager.maps.metalnessMap.texture,
		roughnessMap: this.dynamicTextureManager.maps.roughnessMap.texture,
		// aoMap: this.dynamicTextureManager.maps.aoMap,
		// alphaMap: this.dynamicTextureManager.passes.alphaMap,
		// alphaTest: 0.5,
		// transparent: true,
		// side: THREE.DoubleSide
	});

	addTestGeometry({
		scene: scene,
		material: material
	});

	var test = new CarvableTetrahedron({
		material: material
	});
	test.position.set(1.5, 1.5, -2);
	// scene.add(test);
	var sky = new Sky({
		scene: scene,
		renderer: renderer
	});

	var cameraFirstPerson = new FirstPersonCamera();
	scene.add(cameraFirstPerson);
	onVR(cameraFirstPerson.onVRChangeCameraControls.bind(cameraFirstPerson));

	var cameraThirdPerson = new ThirdPersonCamera();
	scene.add(cameraThirdPerson);

	var fireLight = new FireLight();
	scene.add(fireLight);
	fireLight.position.set(0, 0.5, -3);

	renderer.shadowMap.enabled = true;
	renderer.shadowMap.type = THREE.PCFShadowMap;

	this.sky = sky;
	this.test = test;
	this.cameraFirstPerson = cameraFirstPerson;
	this.cameraThirdPerson = cameraThirdPerson;
}

function onEnterFrame() {
	this.dynamicTextureManager.update();
	this.sky.update();
	this.test.rotation.y = Date.now() * 0.0001;
}

function onResize(w, h) {
	this.cameraFirstPerson.onResize(w, h);
	this.cameraThirdPerson.onResize(w, h);
}

GameWorld.prototype = {
	onEnterFrame: onEnterFrame,
	onResize: onResize
}

module.exports = GameWorld;