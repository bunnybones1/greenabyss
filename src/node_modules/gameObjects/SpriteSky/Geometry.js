const THREE = require('three');
var defaults = require('lodash.defaults');
var eases = require('eases');

var __defaultParams = {
	segsX: 32,
	segsY: 22,
	radius: 80,
	overHang: 0.2,
	horizonLine: 0.25,
	mapFrameHeight: 4,
	mapTotalHeight: 256
};

function SpriteSkyGeometry(params) {
	params = defaults(params, __defaultParams);
	var totalTheta = params.horizonLine + params.overHang;
	var vRange = totalTheta / params.horizonLine;
	THREE.SphereGeometry.call(this, params.radius, params.segsX, params.segsY, undefined, undefined, 0, Math.PI * totalTheta);
	var halfPixelOffset = 0.5 / params.mapTotalHeight;
	var adjustedFrameHeight = (params.mapFrameHeight - 1) / params.mapTotalHeight;
	this.faceVertexUvs[0].forEach(function(faceUvs) {
		faceUvs.forEach(function(uv) {
			uv.x = 1 - Math.abs(uv.x - 0.5) * 2;
			uv.x = eases.sineIn(eases.quartOut(uv.x));
			// uv.x *= 3;
			// uv.x -= 1;
			uv.y = 1-uv.y;
			uv.y *= vRange;
			if(uv.y > 1) {
				uv.y = 2 - uv.y;
			}
			uv.y = 1-uv.y;
			uv.y = eases.expoOut(uv.y);
			uv.y *= adjustedFrameHeight;
			uv.y += halfPixelOffset;
		})
	});
}

SpriteSkyGeometry.prototype = Object.create(THREE.SphereGeometry.prototype);

module.exports = SpriteSkyGeometry;