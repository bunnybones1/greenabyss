var THREE = require('three');
var defaults = require('lodash.defaults');
var clone = require('lodash.clonedeep');
var TestSphere = require('meshes/TestSphere');
var TestBox = require('meshes/TestBox');

var __defaultParams = {

};

function DynamicTextureManager(params) {
	params = defaults(params, __defaultParams);
	if(!params.renderer) throw new Error('You must provide a threejs webGL renderer.');
	var renderer = params.renderer;

	var scene = new THREE.Scene();
	var camera = new THREE.OrthographicCamera(0, 1, 1, 0, -1, 1);

	var width = 512;
	var height = 256;
	scene.add(camera);

	var maps = {};
	var recipes = {
		water: {
			detailScale: 0.3,
			passes: {
				map: {
					type:'Basic',
					color: 0x3fafef,
					colorBG: 0x1f4fef
				},
				// lightMap: {
				// 	intensity: 1.0
				// },
				// aoMap: {
				// 	intensity: 1.0
				// },				
				emissiveMap: {
					type:'Basic',
					color: 0x000000,
					colorBG: 0x000000
				},
				subSurfaceAbsorbColorMap: {
					type:'Basic',
					color: 0xffaf00,
					colorBG: 0xffaf00
				},
				// bumpMap: {},
				normalMap: {
					type: 'Normal',
					reverseNormals: true,
					colorBG: 0x7f7fff,
					// opacity: 0.5
				},
				// displacementMap: {},
				roughnessMap: {
					type: 'Basic',
					color: 0x1f1f1f,
					colorBG: 0x1f1f1f
				},
				metalnessMap: {
					type: 'Basic',
					color: 0xffffff,
					colorBG: 0xffffff
				},
				alphaMap: {
					type: 'Basic',
					color: 0xffffff,
					colorBG: 0x000000
				},
				// envMap: {
				// 	intensity: 1.0
				// },
			}
		},
		dirt: {
			detailScale: 0.03,
			passes: {
				map: {
					type:'Basic',
					color: 0x4f4f4f,
					colorBG: 0x6f4f2f
				},
				// lightMap: {
				// 	intensity: 1.0
				// },
				// aoMap: {
				// 	intensity: 1.0
				// },				
				emissiveMap: {
					type:'Basic',
					color: 0x000000,
					colorBG: 0x000000
				},
				subSurfaceAbsorbColorMap: {
					type:'Basic',
					color: 0x7f7f7f,
					colorBG: 0x7f7f7f
				},
				// bumpMap: {},
				normalMap: {
					type: 'Normal',
					// reverseNormals: true,
					colorBG: 0x7f7fff,
					// opacity: 0.5
				},
				// displacementMap: {},
				roughnessMap: {
					type: 'Basic',
					color: 0xffffff,
					colorBG: 0xffffff
				},
				metalnessMap: {
					type: 'Basic',
					color: 0x4f4f4f,
					colorBG: 0x000000
				},
				alphaMap: {
					type: 'Basic',
					color: 0xffffff,
					colorBG: 0x000000
				},
				// envMap: {
				// 	intensity: 1.0
				// },
			}
		},
		sand: {
			detailScale: 0.015,
			passes: {
				map: {
					type:'Basic',
					color: 0xaaa68b,
					colorBG: 0xaaa68b
				},
				// lightMap: {
				// 	intensity: 1.0
				// },
				// aoMap: {
				// 	type:'Basic',
				// 	color: 0xffff00,
				// 	colorBG: 0xffff7f,
				// 	intensity: 1.0
				// },				
				emissiveMap: {
					type:'Basic',
					color: 0x000000,
					colorBG: 0x000000
				},
				subSurfaceAbsorbColorMap: {
					type:'Basic',
					color: 0x7f7faf,
					colorBG: 0x7f7faf
				},
				// bumpMap: {},
				normalMap: {
					type: 'Normal',
					// reverseNormals: true,
					colorBG: 0x7f7fff,
					// opacity: 0.5
				},
				// displacementMap: {},
				roughnessMap: {
					type: 'Basic',
					color: 0xafafaf,
					colorBG: 0xffffff
				},
				metalnessMap: {
					type: 'Basic',
					color: 0x4f4f4f,
					colorBG: 0x000000
				},
				alphaMap: {
					type: 'Basic',
					color: 0xffffff,
					colorBG: 0x000000
				},
				// envMap: {
				// 	intensity: 1.0
				// },
			}
		},
		grass: {
			detailScale: 0.1,
			passes: {
				map: {
					type:'Basic',
					color: 0x488f0f,
					colorBG: 0x2f8f0f
				},
				// lightMap: {
				// 	intensity: 1.0
				// },
				// aoMap: {
				// 	intensity: 1.0
				// },
				emissiveMap: {
					type:'Basic',
					color: 0x000000,
					colorBG: 0x000000
				},
				subSurfaceAbsorbColorMap: {
					type:'Basic',
					color: 0xff4fff,
					colorBG: 0xff4fff
				},
				// bumpMap: {},
				normalMap: {
					type: 'Normal',
					reverseNormals: true,
					colorBG: 0x7f7fff,
					// opacity: 0.5
				},
				// displacementMap: {},
				roughnessMap: {
					type: 'Basic',
					color: 0xffffff,
					colorBG: 0xdfdfdf
				},
				metalnessMap: {
					type: 'Basic',
					color: 0x4f4f4f,
					colorBG: 0x000000
				},
				alphaMap: {
					type: 'Basic',
					color: 0xffffff,
					colorBG: 0x000000
				},
				// envMap: {
				// 	intensity: 1.0
				// },
			}
		},
		leaf: {
			detailScale: 1.3,
			passes: {
				map: {
					type:'Basic',
					color: 0x3f7f2f,
					colorBG: 0x2f8f0f
				},
				// lightMap: {
				// 	intensity: 1.0
				// },
				// aoMap: {
				// 	intensity: 1.0
				// },
				emissiveMap: {
					type:'Basic',
					color: 0x000000,
					colorBG: 0x000000
				},
				subSurfaceAbsorbColorMap: {
					type:'Basic',
					color: 0x000000,
					colorBG: 0x7f4fff
				},
				// bumpMap: {},
				normalMap: {
					type: 'Normal',
					// reverseNormals: true,
					colorBG: 0x7f7fff,
					// opacity: 0.5
				},
				// displacementMap: {},
				roughnessMap: {
					type: 'Basic',
					color: 0xefefef,
					colorBG: 0xefefef
				},
				metalnessMap: {
					type: 'Basic',
					color: 0x4f4f4f,
					colorBG: 0x000000
				},
				alphaMap: {
					type: 'Basic',
					color: 0xffffff,
					colorBG: 0x000000
				},
				// envMap: {
				// 	intensity: 1.0
				// },
			}
		},
		flowerPetals: {
			detailScale: 2,
			passes: {
				map: {
					type:'Basic',
					color: 0xff8bc2,
					colorBG: 0x2f8f0f
				},
				// lightMap: {
				// 	intensity: 1.0
				// },
				// aoMap: {
				// 	intensity: 1.0
				// },
				emissiveMap: {
					type:'Basic',
					color: 0x000000,
					colorBG: 0x000000
				},
				subSurfaceAbsorbColorMap: {
					type:'Basic',
					color: 0x000000,
					colorBG: 0xff4fff
				},
				// bumpMap: {},
				normalMap: {
					type: 'Normal',
					// reverseNormals: true,
					colorBG: 0x7f7fff,
					// opacity: 0.5
				},
				// displacementMap: {},
				roughnessMap: {
					type: 'Basic',
					color: 0xffffff,
					colorBG: 0xdfdfdf
				},
				metalnessMap: {
					type: 'Basic',
					color: 0x000000,
					colorBG: 0x000000
				},
				alphaMap: {
					type: 'Basic',
					color: 0xffffff,
					colorBG: 0x000000
				},
				// envMap: {
				// 	intensity: 1.0
				// },
			}
		},
		fruit: {
			detailScale: 2,
			passes: {
				map: {
					type:'Basic',
					color: 0xff4d07,
					colorBG: 0x2f8f0f
				},
				// lightMap: {
				// 	intensity: 1.0
				// },
				// aoMap: {
				// 	intensity: 1.0
				// },
				emissiveMap: {
					type:'Basic',
					color: 0x000000,
					colorBG: 0x000000
				},
				subSurfaceAbsorbColorMap: {
					type:'Basic',
					color: 0x000000,
					colorBG: 0xff4fff
				},
				// bumpMap: {},
				normalMap: {
					type: 'Normal',
					// reverseNormals: true,
					colorBG: 0x7f7fff,
					// opacity: 0.5
				},
				// displacementMap: {},
				roughnessMap: {
					type: 'Basic',
					color: 0xffffff,
					colorBG: 0xdfdfdf
				},
				metalnessMap: {
					type: 'Basic',
					color: 0x7f7f7f,
					colorBG: 0x000000
				},
				alphaMap: {
					type: 'Basic',
					color: 0xffffff,
					colorBG: 0x000000
				},
				// envMap: {
				// 	intensity: 1.0
				// },
			}
		},
		woodBark: {
			detailScale: 0.06,
			detailAspect: 0.1,
			passes: {
				map: {
					type:'Basic',
					color: 0x4f3f1f,
					colorBG: 0x3f2f1f
				},
				// lightMap: {
				// 	intensity: 1.0
				// },
				// aoMap: {
				// 	intensity: 1.0
				// },				
				emissiveMap: {
					type:'Basic',
					color: 0x000000,
					colorBG: 0x000000
				},
				subSurfaceAbsorbColorMap: {
					type:'Basic',
					color: 0x7f7f7f,
					colorBG: 0x7f7f7f
				},
				// bumpMap: {},
				normalMap: {
					type: 'Normal',
					reverseNormals: true,
					colorBG: 0x7f7fff,
					// opacity: 0.5
				},
				// displacementMap: {},
				roughnessMap: {
					type: 'Basic',
					color: 0xcfcfcf,
					colorBG: 0xffffff
				},
				metalnessMap: {
					type: 'Basic',
					color: 0x000000,
					colorBG: 0x000000
				},
				alphaMap: {
					type: 'Basic',
					color: 0xffffff,
					colorBG: 0x000000
				},
				// envMap: {
				// 	intensity: 1.0
				// },
			}
		},
		wood: {
			detailScale: 0.0035,
			detailAspect: 0.001,
			passes: {
				map: {
					type:'Basic',
					color: 0x947332,
					colorBG: 0xaa905d
				},
				// lightMap: {
				// 	intensity: 1.0
				// },
				// aoMap: {
				// 	intensity: 1.0
				// },				
				emissiveMap: {
					type:'Basic',
					color: 0x000000,
					colorBG: 0x000000
				},
				subSurfaceAbsorbColorMap: {
					type:'Basic',
					color: 0x7f7f7f,
					colorBG: 0x7f7f7f
				},
				// bumpMap: {},
				normalMap: {
					type: 'Normal',
					reverseNormals: true,
					colorBG: 0x7f7fff,
					// opacity: 0.5
				},
				// displacementMap: {},
				roughnessMap: {
					type: 'Basic',
					color: 0xffffff,
					colorBG: 0xffffff
				},
				metalnessMap: {
					type: 'Basic',
					color: 0x000000,
					colorBG: 0x000000
				},
				alphaMap: {
					type: 'Basic',
					color: 0xffffff,
					colorBG: 0x000000
				},
				// envMap: {
				// 	intensity: 1.0
				// },
			}
		},
		woodCrossSection: {
			detailType: 'rings',
			detailScale: 0.1,
			passes: {
				map: {
					type:'Basic',
					color: 0x947332,
					colorBG: 0xaa905d
				},
				// lightMap: {
				// 	intensity: 1.0
				// },
				// aoMap: {
				// 	intensity: 1.0
				// },				
				emissiveMap: {
					type:'Basic',
					color: 0x000000,
					colorBG: 0x000000
				},
				subSurfaceAbsorbColorMap: {
					type:'Basic',
					color: 0x7f7f7f,
					colorBG: 0x7f7f7f
				},
				// bumpMap: {},
				normalMap: {
					type: 'Normal',
					reverseNormals: true,
					colorBG: 0x7f7fff,
					// opacity: 0.5
				},
				// displacementMap: {},
				roughnessMap: {
					type: 'Basic',
					color: 0xffffff,
					colorBG: 0xffffff
				},
				metalnessMap: {
					type: 'Basic',
					color: 0x000000,
					colorBG: 0x000000
				},
				alphaMap: {
					type: 'Basic',
					color: 0xffffff,
					colorBG: 0x000000
				},
				// envMap: {
				// 	intensity: 1.0
				// },
			}
		},
		mushroomTop: {
			detailScale: 0.07,
			passes: {
				map: {
					type:'Basic',
					color: 0xf01846,
					colorBG: 0xe8dfbb
				},
				// lightMap: {
				// 	intensity: 1.0
				// },
				// aoMap: {
				// 	intensity: 1.0
				// },
				emissiveMap: {
					type:'Basic',
					color: 0x000000,
					colorBG: 0x000000
				},
				subSurfaceAbsorbColorMap: {
					type:'Basic',
					color: 0x003f7f,
					colorBG: 0x003f7f
				},
				// bumpMap: {},
				normalMap: {
					type: 'Normal',
					// reverseNormals: true,
					colorBG: 0x7f7fff,
					// opacity: 0.5
				},
				// displacementMap: {},
				roughnessMap: {
					type: 'Basic',
					color: 0xbfbfbf,
					colorBG: 0xffffff
				},
				metalnessMap: {
					type: 'Basic',
					color: 0x4f4f4f,
					colorBG: 0x000000
				},
				alphaMap: {
					type: 'Basic',
					color: 0xffffff,
					colorBG: 0x000000
				},
				// envMap: {
				// 	intensity: 1.0
				// },
			}
		},
		mushroomStalk: {
			detailScale: 0.55,
			passes: {
				map: {
					type:'Basic',
					color: 0xa16b4a,
					colorBG: 0xa16b4a
				},
				// lightMap: {
				// 	intensity: 1.0
				// },
				// aoMap: {
				// 	type:'Basic',
				// 	color: 0xffff00,
				// 	colorBG: 0xffff7f,
				// 	intensity: 1.0
				// },				
				emissiveMap: {
					type:'Basic',
					color: 0x000000,
					colorBG: 0x000000
				},
				subSurfaceAbsorbColorMap: {
					type:'Basic',
					color: 0x00afaf,
					colorBG: 0x00afaf
				},
				// bumpMap: {},
				normalMap: {
					type: 'Normal',
					// reverseNormals: true,
					colorBG: 0x7f7fff,
					// opacity: 0.5
				},
				// displacementMap: {},
				roughnessMap: {
					type: 'Basic',
					color: 0xffffff,
					colorBG: 0xffffff
				},
				metalnessMap: {
					type: 'Basic',
					color: 0x000000,
					colorBG: 0x000000
				},
				alphaMap: {
					type: 'Basic',
					color: 0xffffff,
					colorBG: 0x000000
				},
				// envMap: {
				// 	intensity: 1.0
				// },
			}
		},
		iron: {
			detailScale: 0.23,
			passes: {
				map: {
					type:'Basic',
					color: 0x4f4f4f,
					colorBG: 0x4f4f4f
				},
				// lightMap: {
				// 	intensity: 1.0
				// },
				// aoMap: {
				// 	intensity: 1.0
				// },				
				emissiveMap: {
					type:'Basic',
					color: 0x000000,
					colorBG: 0x000000
				},
				subSurfaceAbsorbColorMap: {
					type:'Basic',
					color: 0xffffff,
					colorBG: 0xffffff
				},
				// bumpMap: {},
				normalMap: {
					type: 'Normal',
					reverseNormals: true,
					colorBG: 0x7f7fff,
					// opacity: 0.5
				},
				// displacementMap: {},
				roughnessMap: {
					type: 'Basic',
					color: 0xffffff,
					colorBG: 0xffffff
				},
				metalnessMap: {
					type: 'Basic',
					color: 0x7f7f7f,
					colorBG: 0x7f7f7f
				},
				alphaMap: {
					type: 'Basic',
					color: 0xffffff,
					colorBG: 0x000000
				},
				// envMap: {
				// 	intensity: 1.0
				// },
			}
		},
		copper: {
			detailScale: 0.43,
			passes: {
				map: {
					type:'Basic',
					color: 0xc17b02,
					colorBG: 0xc17b02
				},
				// lightMap: {
				// 	intensity: 1.0
				// },
				// aoMap: {
				// 	intensity: 1.0
				// },				
				emissiveMap: {
					type:'Basic',
					color: 0x000000,
					colorBG: 0x000000
				},
				subSurfaceAbsorbColorMap: {
					type:'Basic',
					color: 0xffffff,
					colorBG: 0xffffff
				},
				// bumpMap: {},
				normalMap: {
					type: 'Normal',
					reverseNormals: true,
					colorBG: 0x7f7fff,
					// opacity: 0.5
				},
				// displacementMap: {},
				roughnessMap: {
					type: 'Basic',
					color: 0xafafaf,
					colorBG: 0xafafaf
				},
				metalnessMap: {
					type: 'Basic',
					color: 0x5f5f5f,
					colorBG: 0x5f5f5f
				},
				alphaMap: {
					type: 'Basic',
					color: 0xffffff,
					colorBG: 0x000000
				},
				// envMap: {
				// 	intensity: 1.0
				// },
			}
		},
		silver: {
			detailScale: 0.43,
			passes: {
				map: {
					type:'Basic',
					color: 0xffffff,
					colorBG: 0xffffff
				},
				// lightMap: {
				// 	intensity: 1.0
				// },
				// aoMap: {
				// 	intensity: 1.0
				// },				
				emissiveMap: {
					type:'Basic',
					color: 0x000000,
					colorBG: 0x000000
				},
				subSurfaceAbsorbColorMap: {
					type:'Basic',
					color: 0x7f7f00,
					colorBG: 0x7f7f00
				},
				// bumpMap: {},
				normalMap: {
					type: 'Normal',
					reverseNormals: true,
					colorBG: 0x7f7fff,
					// opacity: 0.5
				},
				// displacementMap: {},
				roughnessMap: {
					type: 'Basic',
					color: 0x3f3f3f,
					colorBG: 0x3f3f3f
				},
				metalnessMap: {
					type: 'Basic',
					color: 0xffffff,
					colorBG: 0xffffff
				},
				alphaMap: {
					type: 'Basic',
					color: 0xffffff,
					colorBG: 0x000000
				},
				// envMap: {
				// 	intensity: 1.0
				// },
			}
		},
		gold: {
			detailScale: 0.43,
			passes: {
				map: {
					type:'Basic',
					color: 0xf1d306,
					colorBG: 0xf1d306
				},
				// lightMap: {
				// 	intensity: 1.0
				// },
				// aoMap: {
				// 	intensity: 1.0
				// },				
				emissiveMap: {
					type:'Basic',
					color: 0x000000,
					colorBG: 0x000000
				},
				subSurfaceAbsorbColorMap: {
					type:'Basic',
					color: 0x0000ff,
					colorBG: 0x0000ff
				},
				// bumpMap: {},
				normalMap: {
					type: 'Normal',
					reverseNormals: true,
					colorBG: 0x7f7fff,
					// opacity: 0.5
				},
				// displacementMap: {},
				roughnessMap: {
					type: 'Basic',
					color: 0xafafaf,
					colorBG: 0xafafaf
				},
				metalnessMap: {
					type: 'Basic',
					color: 0xffffff,
					colorBG: 0xffffff
				},
				alphaMap: {
					type: 'Basic',
					color: 0xffffff,
					colorBG: 0x000000
				},
				// envMap: {
				// 	intensity: 1.0
				// },
			}
		},
		cloth: {
			detailScale: 2.00,
			passes: {
				map: {
					type:'Basic',
					color: 0x7d6847,
					colorBG: 0x7d6847
				},
				// lightMap: {
				// 	intensity: 1.0
				// },
				// aoMap: {
				// 	intensity: 1.0
				// },				
				emissiveMap: {
					type:'Basic',
					color: 0x000000,
					colorBG: 0x000000
				},
				subSurfaceAbsorbColorMap: {
					type:'Basic',
					color: 0x7f7f7f,
					colorBG: 0x7f7f7f
				},
				// bumpMap: {},
				normalMap: {
					type: 'Normal',
					reverseNormals: true,
					colorBG: 0x7f7fff,
					// opacity: 0.5
				},
				// displacementMap: {},
				roughnessMap: {
					type: 'Basic',
					color: 0xffffff,
					colorBG: 0xffffff
				},
				metalnessMap: {
					type: 'Basic',
					color: 0x000000,
					colorBG: 0x000000
				},
				alphaMap: {
					type: 'Basic',
					color: 0xffffff,
					colorBG: 0x000000
				},
				// envMap: {
				// 	intensity: 1.0
				// },
			}
		},
		skin: {
			detailScale: 2,
			passes: {
				map: {
					type:'Basic',
					color: 0xecb591,
					colorBG: 0xecb591
				},
				// lightMap: {
				// 	intensity: 1.0
				// },
				// aoMap: {
				// 	type:'Basic',
				// 	color: 0xffff00,
				// 	colorBG: 0xffff7f,
				// 	intensity: 1.0
				// },				
				emissiveMap: {
					type:'Basic',
					color: 0x000000,
					colorBG: 0x000000
				},
				subSurfaceAbsorbColorMap: {
					type:'Basic',
					color: 0x00afaf,
					colorBG: 0x00afaf
				},
				// bumpMap: {},
				normalMap: {
					type: 'Normal',
					reverseNormals: true,
					colorBG: 0x7f7fff,
					// opacity: 0.5
				},
				// displacementMap: {},
				roughnessMap: {
					type: 'Basic',
					color: 0xffffff,
					colorBG: 0xffffff
				},
				metalnessMap: {
					type: 'Basic',
					color: 0x000000,
					colorBG: 0x000000
				},
				alphaMap: {
					type: 'Basic',
					color: 0xffffff,
					colorBG: 0x000000
				},
				// envMap: {
				// 	intensity: 1.0
				// },
			}
		},
		wax: {
			detailScale: 0.43,
			passes: {
				map: {
					type:'Basic',
					color: 0xecd390,
					colorBG: 0xecd390
				},
				// lightMap: {
				// 	intensity: 1.0
				// },
				// aoMap: {
				// 	intensity: 1.0
				// },				
				emissiveMap: {
					type:'Basic',
					color: 0x000000,
					colorBG: 0x000000
				},
				subSurfaceAbsorbColorMap: {
					type:'Basic',
					color: 0x000000,
					colorBG: 0x000000
				},
				// bumpMap: {},
				normalMap: {
					type: 'Normal',
					// reverseNormals: true,
					colorBG: 0x7f7fff,
					// opacity: 0.5
				},
				// displacementMap: {},
				roughnessMap: {
					type: 'Basic',
					color: 0xffffff,
					colorBG: 0xffffff
				},
				metalnessMap: {
					type: 'Basic',
					color: 0x7f7f7f,
					colorBG: 0x7f7f7f
				},
				alphaMap: {
					type: 'Basic',
					color: 0xffffff,
					colorBG: 0x000000
				},
				// envMap: {
				// 	intensity: 1.0
				// },
			}
		},
		empty: {
			detailScale: 0.43,
			passes: {
				map: {
					type:'Basic',
					color: 0xafafaf,
					colorBG: 0xafafaf
				},
				// lightMap: {
				// 	intensity: 1.0
				// },
				// aoMap: {
				// 	intensity: 1.0
				// },				
				emissiveMap: {
					type:'Basic',
					color: 0x000000,
					colorBG: 0x000000
				},
				subSurfaceAbsorbColorMap: {
					type:'Basic',
					color: 0x000000,
					colorBG: 0x000000
				},
				// bumpMap: {},
				normalMap: {
					type: 'Normal',
					reverseNormals: true,
					colorBG: 0x7f7fff,
					// opacity: 0.5
				},
				// displacementMap: {},
				roughnessMap: {
					type: 'Basic',
					color: 0xffffff,
					colorBG: 0xffffff
				},
				metalnessMap: {
					type: 'Basic',
					color: 0x000000,
					colorBG: 0x000000
				},
				alphaMap: {
					type: 'Basic',
					color: 0xffffff,
					colorBG: 0x000000
				},
				// envMap: {
				// 	intensity: 1.0
				// },
			}
		}
	};

	[
		'iron',
		'copper',
		'silver',
		'gold'
	].forEach(function(key) {
		var metalRecipe = recipes[key];
		var oreRecipe = clone(recipes.dirt);
		oreRecipe.detailScale = 0.045;
		Object.keys(oreRecipe.passes).forEach(function(passKey) {
			oreRecipe.passes[passKey].color = metalRecipe.passes[passKey].color;
		});
		recipes[key+'Ore'] = (oreRecipe);
	});

	var clothColors = {
		red: 0x762929,
		blue: 0x293976,
		white: 0xafaa9f
	}
	Object.keys(clothColors).forEach(function(key) {
		var colorClothRecipe = clone(recipes.cloth);
		colorClothRecipe.passes.map.color = clothColors[key];
		recipes[key+'Cloth'] = (colorClothRecipe);
	});

	var count = Object.keys(recipes).length;
	for (var i = count; i < 32; i++) {
		recipes["empty"+i] = recipes.empty;
	}
	Object.keys(recipes).forEach(function(recipeKey) {
		var recipe = recipes[recipeKey];
		Object.keys(recipe.passes).forEach(function(passKey) {
			var pass = recipe.passes[passKey];
			pass.material = new THREE['Mesh'+pass.type+'Material']({
				color: pass.color,
				reverseNormals: pass.reverseNormals || false,
				transparent: pass.opacity !== undefined,
				opacity: pass.opacity
			});
			if(!maps[passKey]) {
				maps[passKey] = new THREE.WebGLRenderTarget(width, height);
			}
		});
	});

	var spheresContainer = new THREE.Object3D();
	var ringsContainer = new THREE.Object3D();
	var detailGroups = {
		spheres: spheresContainer,
		rings: ringsContainer
	};

	var detailMaterial = new THREE.MeshBasicMaterial();

	for (var i = 0; i < 200; i++) {
		var detailSphere = new TestSphere({
			material: detailMaterial
		});
		scene.add(detailSphere);
		detailSphere.scale.set(0.1, 0.1, 0.1);
		detailSphere.position.set(
			Math.random(),
			Math.random(),
			0
		);
		spheresContainer.add(detailSphere);
	}

	for (var i = 0; i < 200; i++) {
		var detailRing = new TestBox({
			material: detailMaterial
		});
		scene.add(detailRing);
		detailRing.scale.set(0.1, 0.1, 0.1);
		detailRing.position.set(
			Math.random(),
			Math.random(),
			0
		);
		ringsContainer.add(detailRing);
	}

	var bgPlane = new THREE.Mesh(
		new THREE.PlaneGeometry(1, 1, 1, 1),
		new THREE.MeshBasicMaterial({
			color: 0xff0000
		})
	);
	bgPlane.position.set(0.5, 0.5, -0.9999);
	scene.add(bgPlane);

	this.recipes = recipes;
	this.bgPlane = bgPlane;
	this.maps = maps;
	this.detailGroups = detailGroups;
	this.scene = scene;
	this.camera = camera;
	this.renderer = renderer;
	this.width = width;
	this.height = height;
	this.dirty = true;
}

function update() {
	if(!this.dirty) return;
	this.dirty = false;
	var recipes = this.recipes;
	var rows = 4;
	var cols = 8;
	var subWidth = this.width / cols;
	var subHeight = this.height / rows; 
	this.renderer.autoClear = false;
	var detailContainer = this.detailGroups['spheres'];
	var scene = this.scene;
	this.scene.add(detailContainer);
	var recipeKeys = Object.keys(recipes);
	for (var iRecipe = 0; iRecipe < recipeKeys.length; iRecipe++) {
		var recipeKey = recipeKeys[iRecipe];
		var recipe = recipes[recipeKey];
		var newDetailContainer = this.detailGroups[recipe.detailType || 'spheres'];
		if(newDetailContainer !== detailContainer) {
			scene.remove(detailContainer);
			scene.add(newDetailContainer);
			detailContainer = newDetailContainer;
		}
		var detailItems = detailContainer.children;
		recipe.index = iRecipe;
		var row = ~~(iRecipe / cols);
		var col = iRecipe % cols;
		var passKeys = Object.keys(recipe.passes);
		for (var iPass = 0; iPass < passKeys.length; iPass++) {
			var passKey = passKeys[iPass];
			var pass = recipe.passes[passKey];
			for (var iDetail = 0; iDetail < detailItems.length; iDetail++) {
				var sphere = detailItems[iDetail];
				var s = recipe.detailScale || 0.1;
				var sa = recipe.detailAspect || 1;
				sphere.scale.set(s, s/sa, s);
				sphere.material = pass.material;
			}
			this.bgPlane.material.color.set(pass.colorBG);
			this.maps[passKey].scissor.set(subWidth * col, subHeight * row, subWidth, subHeight);
			this.maps[passKey].viewport.set(subWidth * col, subHeight * row, subWidth, subHeight);
			this.renderer.render(scene, this.camera, this.maps[passKey]);
		}
	}
	this.renderer.setClearColor(0x000000);
	this.renderer.autoClear = true;
}

function morphUvsToMaterialSwatch(geometry, alias) {
	var uvArray = geometry.attributes.uv.array;
	var total = geometry.attributes.uv.count;
	var i = this.recipes[alias].index;
	var cols = 8;
	var rows = 4;
	var total = cols * rows;
	var padding = 1;
	var paddedScale = 1 - (2 * padding);
	var row = ~~(i / cols);
	var col = i % cols;
	for (var i = 0; i < uvArray.length; i+=2) {
		uvArray[i] = (uvArray[i] * paddedScale + col + padding) / cols;
		uvArray[i+1] = (uvArray[i+1] * paddedScale + row + padding) / rows;
	}
}

function linkMaterial(material) {
	material.morphUvsToMaterialSwatch = morphUvsToMaterialSwatch.bind(this);
}

DynamicTextureManager.prototype = {
	update: update,
	linkMaterial: linkMaterial
}

module.exports = DynamicTextureManager;